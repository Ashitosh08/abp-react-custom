"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useOidcUser = exports.OidcUserStatus = void 0;
var react_1 = require("react");
var oidc_1 = __importDefault(require("./vanilla/oidc"));
var OidcUserStatus;
(function (OidcUserStatus) {
    OidcUserStatus["Unauthenticated"] = "Unauthenticated";
    OidcUserStatus["Loading"] = "Loading user";
    OidcUserStatus["Loaded"] = "User loaded";
    OidcUserStatus["LoadingError"] = "Error loading user";
})(OidcUserStatus = exports.OidcUserStatus || (exports.OidcUserStatus = {}));
var useOidcUser = function (configurationName) {
    if (configurationName === void 0) { configurationName = "default"; }
    var _a = (0, react_1.useState)({ user: null, status: OidcUserStatus.Unauthenticated }), oidcUser = _a[0], setOidcUser = _a[1];
    var oidc = oidc_1.default.get(configurationName);
    (0, react_1.useEffect)(function () {
        var isMounted = true;
        if (oidc && oidc.tokens) {
            setOidcUser(__assign(__assign({}, oidcUser), { status: OidcUserStatus.Loading }));
            oidc.userInfoAsync()
                .then(function (info) {
                if (isMounted) {
                    setOidcUser({ user: info, status: OidcUserStatus.Loaded });
                }
            })
                .catch(function () { return setOidcUser(__assign(__assign({}, oidcUser), { status: OidcUserStatus.LoadingError })); });
        }
        return function () { isMounted = false; };
    }, []);
    return { oidcUser: oidcUser.user, oidcUserLoadingState: oidcUser.status };
};
exports.useOidcUser = useOidcUser;
//# sourceMappingURL=User.js.map